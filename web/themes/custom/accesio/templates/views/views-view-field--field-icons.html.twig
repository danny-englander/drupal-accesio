{#
/**
 * @file
 * Theme override for a single field in a view.
 *
 * Available variables:
 * - view: The view that the field belongs to.
 * - field: The field handler that can process the input.
 * - row: The raw result of the database query that generated this field.
 * - output: The processed output that will normally be used.
 *
 * When fetching output from the row this construct should be used:
 * data = row[field.field_alias]
 *
 * The above will guarantee that you'll always get the correct data, regardless
 * of any changes in the aliasing that might happen if the view is modified.
 *
 * @see template_preprocess_views_view_field()
 */
#}
{{ attach_library('accesio/icons') }}
{{ attach_library('accesio/masonry') }}

<div class="icon-item flex-row--eq-height">
  <div class="icon-item__inner flex-row--eq-height">

    <div class="icon-item__preview-icon preview-icon">
      <span class="icon-item__step step size-48">
      <i class="icon-item__icon icon ion-{{- icon_name -}}"></i>
    </span>
    </div>

    <h2 class="searchable h4">{{ icon_name -}}</h2>

    <div class="icon-item__usage usage">

      <div class="icon-item__form-item">
        <label for="name">{{ 'Classname:'|t }}</label>
        <input class="name" type="text" readonly="readonly" onclick="this.select();" value="ion-{{- icon_name -}}"
               id="name">
      </div>

      <div class="icon-item__form-item">
        <label for="esc-html">{{ 'Escaped HTML:'|t }}</label>
        <input class="html" type="text" readonly="readonly" onclick="this.select();"
               value="&amp;#{{- icon_code | trim('0') -}};" id="esc-html">
      </div>

      <div class="icon-item__form-item">
        <label for="css-content">{{ 'CSS Content:'|t }}</label>
        <input class="css" type="text" readonly="readonly" onclick="this.select();"
               value="\{{- icon_code | trim('0x') -}}" id="css-content">
      </div>
    </div>
  </div>
</div>
