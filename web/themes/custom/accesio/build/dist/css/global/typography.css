/*
A11Y Color grids.
https://contrast-grid.eightshapes.com/?background-colors=&foreground-colors=%2369CEC3%2C%20Green%0D%0A%23212121%2C%20Black%0D%0A%23890C0C%2C%20Dark%20Red%0D%0A%23FFC300%2C%20Goldenrod%0D%0A%23404040%2C%20Charcoal%0D%0A%23FFF%2C%20White%0D%0A%23482e6e%2C%20Eggplant%0D%0A%23301f4a%2C%20Dark%20eggplant%0D%0A%2327776e%2C%20green%20dark%0D%0A&es-color-form__tile-size=large

*/
/* stylelint-disable */
/* stylelint-enable */
/*
A11Y Color grids.
https://contrast-grid.eightshapes.com/?background-colors=&foreground-colors=%2369CEC3%2C%20Green%0D%0A%23212121%2C%20Black%0D%0A%23890C0C%2C%20Dark%20Red%0D%0A%23FFC300%2C%20Goldenrod%0D%0A%23404040%2C%20Charcoal%0D%0A%23FFF%2C%20White%0D%0A%23482e6e%2C%20Eggplant%0D%0A%23301f4a%2C%20Dark%20eggplant%0D%0A%2327776e%2C%20green%20dark%0D%0A&es-color-form__tile-size=large

*/
/* stylelint-disable */
/* stylelint-enable */
/* eb-garamond-regular - latin
https://google-webfonts-helper.herokuapp.com/fonts/eb-garamond?subsets=latin
*/
@font-face {
  font-family: "EB Garamond";
  font-style: normal;
  font-weight: 400;
  src: url("../../fonts/eb-garamond-v14-latin-regular.eot");
  /* IE9 Compat Modes */
  src: local(""), url("../../fonts/eb-garamond-v14-latin-regular.eot?#iefix") format("embedded-opentype"), url("../../fonts/eb-garamond-v14-latin-regular.woff2") format("woff2"), url("../../fonts/eb-garamond-v14-latin-regular.woff") format("woff"), url("../../fonts/eb-garamond-v14-latin-regular.ttf") format("truetype"), url("../../fonts/eb-garamond-v14-latin-regular.svg#EBGaramond") format("svg");
  /* Legacy iOS */
  font-display: fallback;
}
/* eb-garamond-600 - latin */
@font-face {
  font-family: "EB Garamond";
  font-style: normal;
  font-weight: 600;
  src: url("../../fonts/eb-garamond-v14-latin-600.eot");
  /* IE9 Compat Modes */
  src: local(""), url("../../fonts/eb-garamond-v14-latin-600.eot?#iefix") format("embedded-opentype"), url("../../fonts/eb-garamond-v14-latin-600.woff2") format("woff2"), url("../../fonts/eb-garamond-v14-latin-600.woff") format("woff"), url("../../fonts/eb-garamond-v14-latin-600.ttf") format("truetype"), url("../../fonts/eb-garamond-v14-latin-600.svg#EBGaramond") format("svg");
  /* Legacy iOS */
  font-display: fallback;
}
/* rozha-one-regular - latin */
@font-face {
  font-family: "Rozha One";
  font-style: normal;
  font-weight: 400;
  src: url("../../fonts/rozha-one-v8-latin-regular.eot");
  /* IE9 Compat Modes */
  src: local(""), url("../../fonts/rozha-one-v8-latin-regular.eot?#iefix") format("embedded-opentype"), url("../../fonts/rozha-one-v8-latin-regular.woff2") format("woff2"), url("../../fonts/rozha-one-v8-latin-regular.woff") format("woff"), url("../../fonts/rozha-one-v8-latin-regular.ttf") format("truetype"), url("../../fonts/rozha-one-v8-latin-regular.svg#RozhaOne") format("svg");
  /* Legacy iOS */
  font-display: fallback;
}
/* ibm-plex-sans-regular - latin */
@font-face {
  font-family: "IBM Plex Sans";
  font-style: normal;
  font-weight: 400;
  src: url("../../fonts/ibm-plex-sans-v8-latin-regular.eot");
  /* IE9 Compat Modes */
  src: local(""), url("../../fonts/ibm-plex-sans-v8-latin-regular.eot?#iefix") format("embedded-opentype"), url("../../fonts/ibm-plex-sans-v8-latin-regular.woff2") format("woff2"), url("../../fonts/ibm-plex-sans-v8-latin-regular.woff") format("woff"), url("../../fonts/ibm-plex-sans-v8-latin-regular.ttf") format("truetype"), url("../../fonts/ibm-plex-sans-v8-latin-regular.svg#IBMPlexSans") format("svg");
  /* Legacy iOS */
  font-display: fallback;
}
/* ibm-plex-sans-500 - latin */
@font-face {
  font-family: "IBM Plex Sans";
  font-style: normal;
  font-weight: 500;
  src: url("../../fonts/ibm-plex-sans-v8-latin-500.eot");
  /* IE9 Compat Modes */
  src: local(""), url("../../fonts/ibm-plex-sans-v8-latin-500.eot?#iefix") format("embedded-opentype"), url("../../fonts/ibm-plex-sans-v8-latin-500.woff2") format("woff2"), url("../../fonts/ibm-plex-sans-v8-latin-500.woff") format("woff"), url("../../fonts/ibm-plex-sans-v8-latin-500.ttf") format("truetype"), url("../../fonts/ibm-plex-sans-v8-latin-500.svg#IBMPlexSans") format("svg");
  /* Legacy iOS */
  font-display: fallback;
}
@font-face {
  font-family: "remixicon";
  src: url("../../fonts/remixicon.eot");
  /* IE9*/
  src: url("../../fonts/remixicon.eot?#iefix") format("embedded-opentype"), url("../../fonts/remixicon.woff2") format("woff2"), url("../../fonts/remixicon.woff") format("woff"), url("../../fonts/remixicon.ttf") format("truetype"), url("../../fonts/remixicon.svg?#remixicon") format("svg");
  /* iOS 4.1- */
  font-display: fallback;
}
/* fallback */
@font-face {
  font-family: "Material Icons";
  font-style: normal;
  font-weight: 400;
  src: url("../../fonts/MaterialIcons-Regular.woff2") format("woff2"), url("../fonts/MaterialIcons-Regular.ttf") format("truetype");
  font-display: fallback;
}
/* fallback */
@font-face {
  font-family: "Material Icons Outlined";
  font-style: normal;
  font-weight: 400;
  src: url("../../fonts/MaterialIconsOutlined-Regular.woff2") format("woff2"), url("../fonts/MaterialIconsOutlined-Regular.otf") format("opentype");
  font-display: fallback;
}
/*
WCAG requires that no loss of content or functionality occurs when the
end user overrides page styles for paragraph spacing to 200%
of the font size, text line height/spacing to 150% of the font size,
word spacing to 16% of the font size, and letter spacing to 12%
of the font size. Ensure that your page text can be modified
without it disappearing or overlapping other page content.
 */
body {
  font-family: "IBM Plex Sans", verdana, sans-serif;
  font-size: 100%;
  font-weight: 400;
  color: #404040;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  letter-spacing: 0.0625rem;
}

.h1,
h1 {
  font-family: "EB Garamond", serif;
  font-weight: 400;
  font-size: 3.375rem;
  line-height: 58px;
  letter-spacing: 1px;
  margin-top: 0;
}
@media (min-width: 64em) {
  .h1,
h1 {
    font-size: 4.375rem;
    line-height: 4.875rem;
    margin-bottom: 1.75rem;
  }
}

.h2,
h2 {
  font-family: "EB Garamond", serif;
  font-weight: 500;
  font-size: 2.75rem;
  line-height: 3rem;
  margin-bottom: 1.5625rem;
  margin-top: 0;
}
@media (min-width: 64em) {
  .h2,
h2 {
    font-size: 3.5rem;
    line-height: 3.625rem;
    margin-bottom: 1.75rem;
  }
}

.h3,
h3 {
  font-weight: 400;
  font-size: 1.25rem;
  line-height: 1.5625rem;
  margin-bottom: 1.25rem;
  margin-top: 0;
}
@media (min-width: 64em) {
  .h3,
h3 {
    font-size: 1.625rem;
    line-height: 1.875rem;
    margin-bottom: 1.375rem;
  }
}

.h4,
h4 {
  font-weight: 400;
  font-size: 1.125rem;
  line-height: 1.5625rem;
  margin-top: 0;
  margin-bottom: 0.75rem;
}
@media (min-width: 64em) {
  .h4,
h4 {
    font-size: 1.375rem;
    line-height: 1.875rem;
    margin-bottom: 1.125rem;
  }
}

.h5,
h5 {
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-size: 0.75rem;
  line-height: 1.5625rem;
  margin-top: 0;
  margin-bottom: 0;
}
@media (min-width: 64em) {
  .h5,
h5 {
    font-size: 0.875rem;
    line-height: 1.875rem;
  }
}

.h6,
h6 {
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.5625rem;
  margin-bottom: 0.75rem;
  margin-top: 0;
  margin-bottom: 0;
}
@media (min-width: 64em) {
  .h6,
h6 {
    font-size: 1.125rem;
    line-height: 1.875rem;
  }
}

.l-content li,
.l-content .p,
.l-content p {
  font-family: "IBM Plex Sans", verdana, sans-serif;
  font-size: 1rem;
  line-height: 1.625rem;
  margin-bottom: 2rem;
  letter-spacing: 0.0625rem;
  margin-top: 0;
}
@media (min-width: 64em) {
  .l-content li,
.l-content .p,
.l-content p {
    font-size: 1.1875rem;
    line-height: 2rem;
    margin-bottom: 2.375rem;
  }
}

.material-icons {
  font-family: "Material Icons";
  font-weight: normal;
  font-style: normal;
  font-size: 1.5rem;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-feature-settings: "liga";
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}

.material-icons-outlined {
  font-family: "Material Icons Outlined";
  font-weight: normal;
  font-style: normal;
  font-size: 1.5rem;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-feature-settings: "liga";
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zZXR0aW5ncy5zY3NzIiwiYWJzdHJhY3QvX21peGlucy1zYXNzLW1xLnNjc3MiLCJnbG9iYWwvX2ZvbnQtZmFjZS5zY3NzIiwiZ2xvYmFsL3R5cG9ncmFwaHkuc2NzcyIsImFic3RyYWN0L19taXhpbnMtdHlwb2dyYXBoeS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1DQTtBQUFBO0FBQUE7O0FBQUE7QUM5QkE7QUFtU0E7QURyUUE7QUFBQTtBQUFBOztBQUFBO0FDOUJBO0FBbVNBO0FDclNBO0FBQUE7QUFBQTtBQUdBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QUFBMkQ7RUFDM0Q7QUFLK0U7RUFDL0U7O0FBR0Y7QUFDQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0FBQXVEO0VBQ3ZEO0FBSzJFO0VBQzNFOztBQUdGO0FBQ0E7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBQUF3RDtFQUN4RDtBQUswRTtFQUMxRTs7QUFHRjtBQUNBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QUFBNEQ7RUFDNUQ7QUFLaUY7RUFDakY7O0FBR0Y7QUFDQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0FBQXdEO0VBQ3hEO0FBSzZFO0VBQzdFOztBQUdGO0VBQ0U7RUFDQTtBQUF1QztFQUN2QztBQUkyRDtFQUMzRDs7QUFHRjtBQUNBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFFQTs7QUFHRjtBQUNBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFFQTs7QUN4R0Y7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVNBO0VBQ0UsYUhKVTtFR0tWO0VBQ0E7RUFDQSxPSEZTO0VHR1Q7RUFDQTtFQ2NBLGdCQVRZOzs7QUREZDtBQUFBO0VBRUUsYUhoQlc7RUdpQlg7RUNPQSxXQVRZO0VESVo7RUFDQTtFQUNBOztBRmlKQTtFRXhKRjtBQUFBO0lDVUUsV0FUWTtJQVNaLGFBVFk7SUFTWixlQVRZOzs7O0FEZWQ7QUFBQTtFQUVFLGFIaENXO0VHaUNYO0VDVEEsV0FUWTtFQVNaLGFBVFk7RUFTWixlQVRZO0VEc0JaOztBRmlJQTtFRXhJRjtBQUFBO0lDTkUsV0FUWTtJQVNaLGFBVFk7SUFTWixlQVRZOzs7O0FEK0JkO0FBQUE7RUFHRTtFQ3pCQSxXQVRZO0VBU1osYUFUWTtFQVNaLGVBVFk7RURzQ1o7O0FGaUhBO0VFeEhGO0FBQUE7SUN0QkUsV0FUWTtJQVNaLGFBVFk7SUFTWixlQVRZOzs7O0FEK0NkO0FBQUE7RUFFRTtFQ3hDQSxXQVRZO0VBU1osYUFUWTtFRG9EWjtFQzNDQSxlQVRZOztBSHVKWjtFRXhHRjtBQUFBO0lDdENFLFdBVFk7SUFTWixhQVRZO0lBU1osZUFUWTs7OztBRDhEZDtBQUFBO0VBRUU7RUFDQTtFQUNBO0VDekRBLFdBVFk7RUFTWixhQVRZO0VEcUVaO0VBQ0E7O0FGaUZBO0VFekZGO0FBQUE7SUNyREUsV0FUWTtJQVNaLGFBVFk7Ozs7QUQ4RWQ7QUFBQTtFQUVFO0VDdkVBLFdBVFk7RUFTWixhQVRZO0VBU1osZUFUWTtFRG9GWjtFQUNBOztBRmtFQTtFRXpFRjtBQUFBO0lDckVFLFdBVFk7SUFTWixhQVRZOzs7O0FEOEZaO0FBQUE7QUFBQTtFQUdFLGFIL0dRO0VJdUJWLFdBVFk7RUFTWixhQVRZO0VBU1osZUFUWTtFQVNaLGdCQVRZO0VEc0dWOztBRmlERjtFRXpEQTtBQUFBO0FBQUE7SUNyRkEsV0FUWTtJQVNaLGFBVFk7SUFTWixlQVRZOzs7O0FEZ0hkO0VBQ0U7RUFDQTtFQUNBO0VDMUdBLFdBVFk7RURxSFo7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTtFQUNBO0VDM0hBLFdBVFk7RURzSVo7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0EiLCJmaWxlIjoiZ2xvYmFsL3R5cG9ncmFwaHkuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1hZ2UgcGF0aC5cbi8vIGV4YW1wbGUgdXNhZ2U6XG4vLyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIjeyRwYXRoLXRvLWltYWdlc30veWFkYS15YWRhLnBuZ1wiKTtcbiRwYXRoLXRvLWltYWdlczogXCIvdGhlbWVzL2N1c3RvbS9hY2Nlc2lvL2Rpc3QvYXNzZXRzL2ltYWdlc1wiO1xuXG4vLyBTVkcgcGF0aC5cbi8vIFVzYWdlIHNhbWUgYXMgYWJvdmUuXG4kcGF0aC10by1pY29uczogXCIvdGhlbWVzL2N1c3RvbS9hY2Nlc2lvL3NyYy9pY29uL3Jhd1wiO1xuXG4kZm9udC1zZXJpZjogJ0VCIEdhcmFtb25kJywgc2VyaWY7XG4kZm9udC1zYW5zOiAnSUJNIFBsZXggU2FucycsIHZlcmRhbmEsIHNhbnMtc2VyaWY7XG5cbi8vIEdyYXkgdG9uZXMuXG4kdHJ1ZS1ibGFjazogIzAwMDtcbiRibGFjazogIzIxMjEyMTtcbiRjaGFyY29hbDogIzQwNDA0MDtcbiRkYXJrLWdyYXk6ICM2ZjZmNmY7XG4kbWVkaXVtLWdyYXk6ICM5ODkyOGE7XG4kZ3JheTogI2I3YjdiNztcbiRsaWdodC1ncmF5OiAjZGFkYWRhO1xuJHgtbGlnaHQtZ3JheTogI2Y4ZjZmMztcbiRwYWxlLWdyYXk6ICNlZWU7XG4kb2ZmLXdoaXRlOiAjZjVmNWY1O1xuJHdoaXRlOiAjZmZmO1xuXG4vLyBDb3JlIGNvbG9ycy5cbiRlZ2dwbGFudDogIzQ4MmU2ZTtcbiRkYXJrLXJlZDogIzg5MGMwYztcbiRicmlnaHQtcmVkOiAjYjEwNDBlO1xuJGN5YW46ICMwMDdjOTI7XG4kZGFyay10ZWFsOiAjMDA1MDVjO1xuJHB1cnBsZTogIzRlMTc0OTtcbiRnb2xkZW5yb2Q6ICNmZmMzMDA7XG4kZ3JlZW46ICM2OWNlYzM7XG5cbi8qXG5BMTFZIENvbG9yIGdyaWRzLlxuaHR0cHM6Ly9jb250cmFzdC1ncmlkLmVpZ2h0c2hhcGVzLmNvbS8/YmFja2dyb3VuZC1jb2xvcnM9JmZvcmVncm91bmQtY29sb3JzPSUyMzY5Q0VDMyUyQyUyMEdyZWVuJTBEJTBBJTIzMjEyMTIxJTJDJTIwQmxhY2slMEQlMEElMjM4OTBDMEMlMkMlMjBEYXJrJTIwUmVkJTBEJTBBJTIzRkZDMzAwJTJDJTIwR29sZGVucm9kJTBEJTBBJTIzNDA0MDQwJTJDJTIwQ2hhcmNvYWwlMEQlMEElMjNGRkYlMkMlMjBXaGl0ZSUwRCUwQSUyMzQ4MmU2ZSUyQyUyMEVnZ3BsYW50JTBEJTBBJTIzMzAxZjRhJTJDJTIwRGFyayUyMGVnZ3BsYW50JTBEJTBBJTIzMjc3NzZlJTJDJTIwZ3JlZW4lMjBkYXJrJTBEJTBBJmVzLWNvbG9yLWZvcm1fX3RpbGUtc2l6ZT1sYXJnZVxuXG4qL1xuXG4kcHJpbWFyeS1jb2xvcjogJGVnZ3BsYW50O1xuJHByaW1hcnktY29sb3ItZGFyazogZGFya2VuKCRwcmltYXJ5LWNvbG9yLCAxMCUpO1xuJHNlY29uZGFyeS1jb2xvcjogJGdyZWVuO1xuJHNlY29uZGFyeS1jb2xvci1kYXJrOiBkYXJrZW4oJHNlY29uZGFyeS1jb2xvciwgMzAlKTtcblxuLy8gRm9yIHVzYWdlIHdpdGggdGhlIGNvbnRhaW5lciBtaXhpbi5cbiRzbWFsbF9kZXNrdG9wOiAxMDI0cHg7XG4kZGVza3RvcDogMTI4MHB4O1xuXG4vLyBCcmVha3BvaW50cy5cbi8vIGh0dHBzOi8vYXBwLnplcGxpbi5pby9wcm9qZWN0LzVlNjY4MmY2MThhZTBmMTQzOTA2ZmNkNy9zY3JlZW4vNWU2NmFhNjQ0NWIwMTMxMTVmOGUxYThlXG4vLyBOb3RlLCAkbW9iaWxlLCAkc21hbGxfZGVza3RvcCwgYW5kICRkZXNrdG9wIG1pcnJvciB0aGUgbmFtZXMgdGhhdCBhcmUgaW4gdGhlIGRlc2lnbnMuXG4vLyBNYXAgZm9yIHNhc3MgTVEuXG4kYnJlYWtwb2ludHM6IChcbiAgc21hbGw6IDAsXG4gIG1vYmlsZTogMzc1cHgsXG4gIHNtYWxsX3BsdXM6IDUyMHB4LFxuICBtZWRpdW06IDc2OHB4LFxuICBtZWRpdW0tbGFyZ2U6IDkyMHB4LFxuICBzbWFsbF9kZXNrdG9wOiAxMDI0cHgsXG4gIG1lZF9kZXNrdG9wOiAxMTQwcHgsXG4gIGRlc2t0b3A6IDEyODBweCxcbiAgeF93aWRlOiAxNDQwcHgsXG4pO1xuXG4vLyBVbmNvbW1lbnQgdG8gZGVidWcgYnJlYWtwb2ludHMuXG4vLyRtcS1zaG93LWJyZWFrcG9pbnRzOiAoc21hbGwsIG1vYmlsZSwgc21hbGxfcGx1cywgbWVkaXVtLCBtZWRpdW0tbGFyZ2UsIHNtYWxsX2Rlc2t0b3AsIGRlc2t0b3AsIHhfd2lkZSk7XG5cbiRhLXRhZ3MtaG92ZXI6ICcmOmFjdGl2ZSwgJjpmb2N1cywgJjpob3ZlciAnO1xuXG4vLyBGb3JtIHZhcmFpYmxlcy5cbiRtZC1yYWRpby1jaGVja2VkLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcbiRtZC1yYWRpby1ib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC42KTtcbiRtZC1yYWRpby1zaXplOiAzMHB4O1xuJG1kLXJhZGlvLWNoZWNrZWQtc2l6ZTogMTVweDtcbiRtZC1yYWRpby1yaXBwbGUtc2l6ZTogMTVweDtcbiIsIi8vIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9zYXNzLW1xL3Nhc3MtbXEvcHVsbC8xNDRcbkB1c2UgXCJzYXNzOm1hdGhcIjtcbkB1c2UgXCJzYXNzOm1hcFwiO1xuQHVzZSBcInNhc3M6bGlzdFwiO1xuXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSAqL1xuXG4vLy8gQnJlYWtwb2ludCBsaXN0XG4vLy9cbi8vLyBOYW1lIHlvdXIgYnJlYWtwb2ludHMgaW4gYSB3YXkgdGhhdCBjcmVhdGVzIGEgdWJpcXVpdG91cyBsYW5ndWFnZVxuLy8vIGFjcm9zcyB0ZWFtIG1lbWJlcnMuIEl0IHdpbGwgaW1wcm92ZSBjb21tdW5pY2F0aW9uIGJldHdlZW5cbi8vLyBzdGFrZWhvbGRlcnMsIGRlc2lnbmVycywgZGV2ZWxvcGVycywgYW5kIHRlc3RlcnMuXG4vLy9cbi8vLyBAdHlwZSBNYXBcbi8vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xI3NlZWluZy10aGUtY3VycmVudGx5LWFjdGl2ZS1icmVha3BvaW50IEZ1bGwgZG9jdW1lbnRhdGlvbiBhbmQgZXhhbXBsZXNcbiRicmVha3BvaW50czogKFxuICBtb2JpbGU6IDMyMHB4LFxuICB0YWJsZXQ6IDc0MHB4LFxuICBkZXNrdG9wOiA5ODBweCxcbiAgd2lkZTogMTMwMHB4XG4pICFkZWZhdWx0O1xuXG4vLy8gU2hvdyBicmVha3BvaW50cyBpbiB0aGUgdG9wIHJpZ2h0IGNvcm5lclxuLy8vXG4vLy8gSWYgeW91IHdhbnQgdG8gZGlzcGxheSB0aGUgY3VycmVudGx5IGFjdGl2ZSBicmVha3BvaW50IGluIHRoZSB0b3Bcbi8vLyByaWdodCBjb3JuZXIgb2YgeW91ciBzaXRlIGR1cmluZyBkZXZlbG9wbWVudCwgYWRkIHRoZSBicmVha3BvaW50c1xuLy8vIHRvIHRoaXMgbGlzdCwgb3JkZXJlZCBieSB3aWR0aC4gRm9yIGV4YW1wbGU6IChtb2JpbGUsIHRhYmxldCwgZGVza3RvcCkuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzXG4vLy8gICAkc2hvdy1icmVha3BvaW50czogKG1vYmlsZSwgdGFibGV0LCBkZXNrdG9wKTtcbi8vLyAgIEBpbXBvcnQgJ3BhdGgvdG8vbXEnO1xuLy8vXG4vLy8gQHR5cGUgbWFwXG4kc2hvdy1icmVha3BvaW50czogKCkgIWRlZmF1bHQ7XG5cbi8vLyBDdXN0b21pemUgdGhlIG1lZGlhIHR5cGUgKGZvciBleGFtcGxlOiBgQG1lZGlhIHNjcmVlbmAgb3IgYEBtZWRpYSBwcmludGApXG4vLy8gQnkgZGVmYXVsdCBzYXNzLW1xIHVzZXMgYW4gXCJhbGxcIiBtZWRpYSB0eXBlIChgQG1lZGlhIGFsbCBhbmQg4oCmYClcbi8vL1xuLy8vIEB0eXBlIFN0cmluZ1xuLy8vIEBsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9zYXNzLW1xL3Nhc3MtbXEjY2hhbmdpbmctbWVkaWEtdHlwZSBGdWxsIGRvY3VtZW50YXRpb24gYW5kIGV4YW1wbGVcbiRtZWRpYS10eXBlOiBhbGwgIWRlZmF1bHQ7XG5cbi8vLyBDb252ZXJ0IHBpeGVscyB0byBlbXNcbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkcHggLSB2YWx1ZSB0byBjb252ZXJ0XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzXG4vLy8gICRmb250LXNpemUtaW4tZW1zOiBweDJlbSgxNnB4KTtcbi8vLyAgcCB7IGZvbnQtc2l6ZTogcHgyZW0oMTZweCk7IH1cbi8vL1xuLy8vIEByZXR1cm5zIHtOdW1iZXJ9XG5cbkBmdW5jdGlvbiBweDJlbSgkcHgpIHtcbiAgQGlmIG1hdGguaXMtdW5pdGxlc3MoJHB4KSB7XG4gICAgQHdhcm4gXCJBc3N1bWluZyAjeyRweH0gdG8gYmUgaW4gcGl4ZWxzLCBhdHRlbXB0aW5nIHRvIGNvbnZlcnQgaXQgaW50byBwaXhlbHMuXCI7XG4gICAgQHJldHVybiBweDJlbSgkcHggKiAxcHgpO1xuICB9XG4gIC8vIGlmICRweCBpcyBjb21wYXRpYmxlIHdpdGggZW0gdW5pdHMgdGhlbiByZXR1cm4gdmFsdWUgdW5jaGFuZ2VkXG4gIEBpZiBtYXRoLmNvbXBhdGlibGUoJHB4LCAxZW0pIHtcbiAgICBAcmV0dXJuICRweDtcbiAgfVxuICBAcmV0dXJuIG1hdGguZGl2KCRweCwgMTZweCkgKiAxZW07XG59XG5cbi8vLyBHZXQgYSBicmVha3BvaW50J3Mgd2lkdGhcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbmFtZSAtIE5hbWUgb2YgdGhlIGJyZWFrcG9pbnQuIE9uZSBvZiAkYnJlYWtwb2ludHNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgJHRhYmxldC13aWR0aDogZ2V0LWJyZWFrcG9pbnQtd2lkdGgodGFibGV0KTtcbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IGdldC1icmVha3BvaW50LXdpZHRoKGRlc2t0b3ApKSB7fVxuLy8vXG4vLy8gQHJlcXVpcmVzIHtWYXJpYWJsZX0gJGJyZWFrcG9pbnRzXG4vLy9cbi8vLyBAcmV0dXJucyB7TnVtYmVyfSBWYWx1ZSBpbiBwaXhlbHNcbkBmdW5jdGlvbiBnZXQtYnJlYWtwb2ludC13aWR0aCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHMpIHtcbiAgQGlmIG1hcC5oYXMta2V5KCRicmVha3BvaW50cywgJG5hbWUpIHtcbiAgICBAcmV0dXJuIG1hcC5nZXQoJGJyZWFrcG9pbnRzLCAkbmFtZSk7XG4gIH0gQGVsc2Uge1xuICAgIEB3YXJuIFwiQnJlYWtwb2ludCAjeyRuYW1lfSB3YXNuJ3QgZm91bmQgaW4gJGJyZWFrcG9pbnRzLlwiO1xuICAgIEByZXR1cm4gbnVsbDtcbiAgfVxuXG59XG5cbi8vLyBNZWRpYSBRdWVyeSBtaXhpblxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmcgfCBCb29sZWFufSAkZnJvbSBbZmFsc2VdIC0gT25lIG9mICRicmVha3BvaW50c1xuLy8vIEBwYXJhbSB7U3RyaW5nIHwgQm9vbGVhbn0gJHVudGlsIFtmYWxzZV0gLSBPbmUgb2YgJGJyZWFrcG9pbnRzXG4vLy8gQHBhcmFtIHtTdHJpbmcgfCBCb29sZWFufSAkYW5kIFtmYWxzZV0gLSBBZGRpdGlvbmFsIG1lZGlhIHF1ZXJ5IHBhcmFtZXRlcnNcbi8vLyBAcGFyYW0ge1N0cmluZ30gJG1lZGlhLXR5cGUgWyRtZWRpYS10eXBlXSAtIE1lZGlhIHR5cGU6IHNjcmVlbiwgcHJpbnTigKZcbi8vL1xuLy8vIEBpZ25vcmUgVW5kb2N1bWVudGVkIEFQSSwgZm9yIGFkdmFuY2VkIHVzZSBvbmx5OlxuLy8vIEBpZ25vcmUgQHBhcmFtIHtNYXB9ICRicmVha3BvaW50cyBbJGJyZWFrcG9pbnRzXVxuLy8vXG4vLy8gQGNvbnRlbnQgc3R5bGluZyBydWxlcywgd3JhcHBlZCBpbnRvIGEgQG1lZGlhIHF1ZXJ5IHdoZW4gJHJlc3BvbnNpdmUgaXMgdHJ1ZVxuLy8vXG4vLy8gQHJlcXVpcmVzIHtWYXJpYWJsZX0gJG1lZGlhLXR5cGVcbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkYnJlYWtwb2ludHNcbi8vLyBAcmVxdWlyZXMge2Z1bmN0aW9ufSBweDJlbVxuLy8vIEByZXF1aXJlcyB7ZnVuY3Rpb259IGdldC1icmVha3BvaW50LXdpZHRoXG4vLy9cbi8vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xI3Jlc3BvbnNpdmUtbW9kZS1vbi1kZWZhdWx0IEZ1bGwgZG9jdW1lbnRhdGlvbiBhbmQgZXhhbXBsZXNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgLmVsZW1lbnQge1xuLy8vICAgIEBpbmNsdWRlIG1xKCRmcm9tOiBtb2JpbGUpIHtcbi8vLyAgICAgIGNvbG9yOiByZWQ7XG4vLy8gICAgfVxuLy8vICAgIEBpbmNsdWRlIG1xKCR1bnRpbDogdGFibGV0KSB7XG4vLy8gICAgICBjb2xvcjogYmx1ZTtcbi8vLyAgICB9XG4vLy8gICAgQGluY2x1ZGUgbXEobW9iaWxlLCB0YWJsZXQpIHtcbi8vLyAgICAgIGNvbG9yOiBncmVlbjtcbi8vLyAgICB9XG4vLy8gICAgQGluY2x1ZGUgbXEoJGZyb206IHRhYmxldCwgJGFuZDogJyhvcmllbnRhdGlvbjogbGFuZHNjYXBlKScpIHtcbi8vLyAgICAgIGNvbG9yOiB0ZWFsO1xuLy8vICAgIH1cbi8vLyAgICBAaW5jbHVkZSBtcSg5NTBweCkge1xuLy8vICAgICAgY29sb3I6IGhvdHBpbms7XG4vLy8gICAgfVxuLy8vICAgIEBpbmNsdWRlIG1xKHRhYmxldCwgJG1lZGlhLXR5cGU6IHNjcmVlbikge1xuLy8vICAgICAgY29sb3I6IGhvdHBpbms7XG4vLy8gICAgfVxuLy8vICAgIC8vIEFkdmFuY2VkIHVzZTpcbi8vLyAgICAkbXktYnJlYWtwb2ludHM6IChMOiA5MDBweCwgWEw6IDEyMDBweCk7XG4vLy8gICAgQGluY2x1ZGUgbXEoTCwgJGJyZWFrcG9pbnRzOiAkbXktYnJlYWtwb2ludHMpIHtcbi8vLyAgICAgIGNvbG9yOiBob3RwaW5rO1xuLy8vICAgIH1cbi8vLyAgfVxuQG1peGluIG1xKFxuICAkZnJvbTogZmFsc2UsXG4gICR1bnRpbDogZmFsc2UsXG4gICRhbmQ6IGZhbHNlLFxuICAkbWVkaWEtdHlwZTogJG1lZGlhLXR5cGUsXG4gICRicmVha3BvaW50czogJGJyZWFrcG9pbnRzLFxuKSB7XG4gICRtaW4td2lkdGg6IDA7XG4gICRtYXgtd2lkdGg6IDA7XG4gICRtZWRpYS1xdWVyeTogJyc7XG5cbiAgLy8gRnJvbTogdGhpcyBicmVha3BvaW50IChpbmNsdXNpdmUpXG4gIEBpZiAkZnJvbSB7XG4gICAgQGlmIHR5cGUtb2YoJGZyb20pID09IG51bWJlciB7XG4gICAgICAkbWluLXdpZHRoOiBweDJlbSgkZnJvbSk7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkbWluLXdpZHRoOiBweDJlbShnZXQtYnJlYWtwb2ludC13aWR0aCgkZnJvbSwgJGJyZWFrcG9pbnRzKSk7XG4gICAgfVxuICB9XG5cbiAgLy8gVW50aWw6IHRoYXQgYnJlYWtwb2ludCAoZXhjbHVzaXZlKVxuICBAaWYgJHVudGlsIHtcbiAgICBAaWYgdHlwZS1vZigkdW50aWwpID09IG51bWJlciB7XG4gICAgICAkbWF4LXdpZHRoOiBweDJlbSgkdW50aWwpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJG1heC13aWR0aDogcHgyZW0oZ2V0LWJyZWFrcG9pbnQtd2lkdGgoJHVudGlsLCAkYnJlYWtwb2ludHMpKSAtIC4wMWVtO1xuICAgIH1cbiAgfVxuXG4gIEBpZiAkbWluLXdpZHRoICE9IDAge1xuICAgICRtZWRpYS1xdWVyeTogJyN7JG1lZGlhLXF1ZXJ5fSBhbmQgKG1pbi13aWR0aDogI3skbWluLXdpZHRofSknO1xuICB9XG4gIEBpZiAkbWF4LXdpZHRoICE9IDAge1xuICAgICRtZWRpYS1xdWVyeTogJyN7JG1lZGlhLXF1ZXJ5fSBhbmQgKG1heC13aWR0aDogI3skbWF4LXdpZHRofSknO1xuICB9XG4gIEBpZiAkYW5kIHtcbiAgICAkbWVkaWEtcXVlcnk6ICcjeyRtZWRpYS1xdWVyeX0gYW5kICN7JGFuZH0nO1xuICB9XG5cbiAgLy8gUmVtb3ZlIHVubmVjZXNzYXJ5IG1lZGlhIHF1ZXJ5IHByZWZpeCAnYWxsIGFuZCAnXG4gIEBpZiAoJG1lZGlhLXR5cGUgPT0gJ2FsbCcgYW5kICRtZWRpYS1xdWVyeSAhPSAnJykge1xuICAgICRtZWRpYS10eXBlOiAnJztcbiAgICAkbWVkaWEtcXVlcnk6IHN0ci1zbGljZSh1bnF1b3RlKCRtZWRpYS1xdWVyeSksIDYpO1xuICB9XG5cbiAgQG1lZGlhICN7JG1lZGlhLXR5cGUgKyAkbWVkaWEtcXVlcnl9IHtcbiAgICBAY29udGVudDtcbiAgfVxuXG59XG5cbi8vLyBRdWljayBzb3J0XG4vLy9cbi8vLyBAYXV0aG9yIFNhbSBSaWNoYXJkc1xuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vIEBwYXJhbSB7TGlzdH0gJGxpc3QgLSBMaXN0IHRvIHNvcnRcbi8vLyBAcmV0dXJucyB7TGlzdH0gU29ydGVkIExpc3RcbkBmdW5jdGlvbiBfcXVpY2stc29ydCgkbGlzdCkge1xuICAkbGVzczogKCk7XG4gICRlcXVhbDogKCk7XG4gICRsYXJnZTogKCk7XG5cbiAgQGlmIGxlbmd0aCgkbGlzdCkgPiAxIHtcbiAgICAkc2VlZDogbGlzdC5udGgoJGxpc3QsIG1hdGguY2VpbChtYXRoLmRpdihsZW5ndGgoJGxpc3QpLCAyKSkpO1xuXG4gICAgQGVhY2ggJGl0ZW0gaW4gJGxpc3Qge1xuICAgICAgQGlmICgkaXRlbSA9PSAkc2VlZCkge1xuICAgICAgICAkZXF1YWw6IGxpc3QuYXBwZW5kKCRlcXVhbCwgJGl0ZW0pO1xuICAgICAgfSBAZWxzZSBpZiAoJGl0ZW0gPCAkc2VlZCkge1xuICAgICAgICAkbGVzczogbGlzdC5hcHBlbmQoJGxlc3MsICRpdGVtKTtcbiAgICAgIH0gQGVsc2UgaWYgKCRpdGVtID4gJHNlZWQpIHtcbiAgICAgICAgJGxhcmdlOiBsaXN0LmFwcGVuZCgkbGFyZ2UsICRpdGVtKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBAcmV0dXJuIGpvaW4oam9pbihfcXVpY2stc29ydCgkbGVzcyksICRlcXVhbCksIF9xdWljay1zb3J0KCRsYXJnZSkpO1xuICB9XG5cbiAgQHJldHVybiAkbGlzdDtcbn1cblxuLy8vIFNvcnQgYSBtYXAgYnkgdmFsdWVzICh3b3JrcyB3aXRoIG51bWJlcnMgb25seSlcbi8vL1xuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vIEBwYXJhbSB7TWFwfSAkbWFwIC0gTWFwIHRvIHNvcnRcbi8vLyBAcmV0dXJucyB7TWFwfSBNYXAgc29ydGVkIGJ5IHZhbHVlXG5AZnVuY3Rpb24gX21hcC1zb3J0LWJ5LXZhbHVlKCRtYXApIHtcbiAgJG1hcC1zb3J0ZWQ6ICgpO1xuICAkbWFwLWtleXM6IG1hcC5rZXlzKCRtYXApO1xuICAkbWFwLXZhbHVlczogbWFwLnZhbHVlcygkbWFwKTtcbiAgJG1hcC12YWx1ZXMtc29ydGVkOiBfcXVpY2stc29ydCgkbWFwLXZhbHVlcyk7XG5cbiAgLy8gUmVvcmRlciBrZXkvdmFsdWUgcGFpcnMgYmFzZWQgb24ga2V5IHZhbHVlc1xuICBAZWFjaCAkdmFsdWUgaW4gJG1hcC12YWx1ZXMtc29ydGVkIHtcbiAgICAkaW5kZXg6IGluZGV4KCRtYXAtdmFsdWVzLCAkdmFsdWUpO1xuICAgICRrZXk6IGxpc3QubnRoKCRtYXAta2V5cywgJGluZGV4KTtcbiAgICAkbWFwLXNvcnRlZDogbWFwLm1lcmdlKCRtYXAtc29ydGVkLCAoJGtleTogJHZhbHVlKSk7XG5cbiAgICAvLyBVbnNldCB0aGUgdmFsdWUgaW4gJG1hcC12YWx1ZXMgdG8gcHJldmVudCB0aGUgbG9vcFxuICAgIC8vIGZyb20gZmluZGluZyB0aGUgc2FtZSBpbmRleCB0d2ljZVxuICAgICRtYXAtdmFsdWVzOiBsaXN0LnNldC1udGgoJG1hcC12YWx1ZXMsICRpbmRleCwgMCk7XG4gIH1cblxuICBAcmV0dXJuICRtYXAtc29ydGVkO1xufVxuXG4vLy8gQWRkIGEgYnJlYWtwb2ludFxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRuYW1lIC0gTmFtZSBvZiB0aGUgYnJlYWtwb2ludFxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkd2lkdGggLSBXaWR0aCBvZiB0aGUgYnJlYWtwb2ludFxuLy8vXG4vLy8gQHJlcXVpcmVzIHtWYXJpYWJsZX0gJGJyZWFrcG9pbnRzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzXG4vLy8gIEBpbmNsdWRlIGFkZC1icmVha3BvaW50KHR2c2NyZWVuLCAxOTIwcHgpO1xuLy8vICBAaW5jbHVkZSBtcSh0dnNjcmVlbikge31cbkBtaXhpbiBhZGQtYnJlYWtwb2ludCgkbmFtZSwgJHdpZHRoKSB7XG4gICRuZXctYnJlYWtwb2ludDogKCRuYW1lOiAkd2lkdGgpO1xuICAkYnJlYWtwb2ludHM6IG1hcC5tZXJnZSgkYnJlYWtwb2ludHMsICRuZXctYnJlYWtwb2ludCkgIWdsb2JhbDtcbiAgJGJyZWFrcG9pbnRzOiBfbWFwLXNvcnQtYnktdmFsdWUoJGJyZWFrcG9pbnRzKSAhZ2xvYmFsO1xufVxuXG4vLy8gU2hvdyB0aGUgYWN0aXZlIGJyZWFrcG9pbnQgaW4gdGhlIHRvcCByaWdodCBjb3JuZXIgb2YgdGhlIHZpZXdwb3J0XG4vLy8gQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL3Nhc3MtbXEvc2Fzcy1tcSNzZWVpbmctdGhlLWN1cnJlbnRseS1hY3RpdmUtYnJlYWtwb2ludFxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkc2hvdy1icmVha3BvaW50cyBbJHNob3ctYnJlYWtwb2ludHNdIC0gTGlzdCBvZiBicmVha3BvaW50cyB0byBzaG93IGluIHRoZSB0b3AgcmlnaHQgY29ybmVyXG4vLy8gQHBhcmFtIHtNYXB9ICRicmVha3BvaW50cyBbJGJyZWFrcG9pbnRzXSAtIEJyZWFrcG9pbnQgbmFtZXMgYW5kIHNpemVzXG4vLy9cbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkYnJlYWtwb2ludHNcbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkc2hvdy1icmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICAvLyBTaG93IGJyZWFrcG9pbnRzIHVzaW5nIGdsb2JhbCBzZXR0aW5nc1xuLy8vICBAaW5jbHVkZSBzaG93LWJyZWFrcG9pbnRzO1xuLy8vXG4vLy8gIC8vIFNob3cgYnJlYWtwb2ludHMgdXNpbmcgY3VzdG9tIHNldHRpbmdzXG4vLy8gIEBpbmNsdWRlIHNob3ctYnJlYWtwb2ludHMoKEwsIFhMKSwgKFM6IDMwMHB4LCBMOiA4MDBweCwgWEw6IDEyMDBweCkpO1xuQG1peGluIHNob3ctYnJlYWtwb2ludHMoJHNob3ctYnJlYWtwb2ludHM6ICRzaG93LWJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludHM6ICRicmVha3BvaW50cykge1xuICBib2R5OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZDRjhFMztcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0ZCRUVENTtcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNGQkVFRDU7XG4gICAgY29sb3I6ICNDMDk4NTM7XG4gICAgZm9udDogc21hbGwtY2FwdGlvbjtcbiAgICBwYWRkaW5nOiAzcHggNnB4O1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgei1pbmRleDogMTAwO1xuXG4gICAgLy8gTG9vcCB0aHJvdWdoIHRoZSBicmVha3BvaW50cyB0aGF0IHNob3VsZCBiZSBzaG93blxuICAgIEBlYWNoICRzaG93LWJyZWFrcG9pbnQgaW4gJHNob3ctYnJlYWtwb2ludHMge1xuICAgICAgJHdpZHRoOiBnZXQtYnJlYWtwb2ludC13aWR0aCgkc2hvdy1icmVha3BvaW50LCAkYnJlYWtwb2ludHMpO1xuICAgICAgQGluY2x1ZGUgbXEoJHNob3ctYnJlYWtwb2ludCwgJGJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHMpIHtcbiAgICAgICAgY29udGVudDogXCIjeyRzaG93LWJyZWFrcG9pbnR9IOKJpSAjeyR3aWR0aH0gKCN7cHgyZW0oJHdpZHRoKX0pXCI7XG4gICAgICB9XG4gICAgfVxuXG4gIH1cbn1cblxuQGlmIGxpc3QubGVuZ3RoKCRzaG93LWJyZWFrcG9pbnRzKSA+IDAge1xuICBAaW5jbHVkZSBzaG93LWJyZWFrcG9pbnRzO1xufVxuXG4vKiBzdHlsZWxpbnQtZW5hYmxlICovXG4iLCJAdXNlICcuL25vZGVfbW9kdWxlcy9zYXNzLXJlbScgYXMgcmVtO1xuQGltcG9ydCBcIi4uL2dsb2JhbC1pbmNsdWRlc1wiO1xuXG4vKiBlYi1nYXJhbW9uZC1yZWd1bGFyIC0gbGF0aW5cbmh0dHBzOi8vZ29vZ2xlLXdlYmZvbnRzLWhlbHBlci5oZXJva3VhcHAuY29tL2ZvbnRzL2ViLWdhcmFtb25kP3N1YnNldHM9bGF0aW5cbiovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdFQiBHYXJhbW9uZCc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgc3JjOiB1cmwoJy4uLy4uL2ZvbnRzL2ViLWdhcmFtb25kLXYxNC1sYXRpbi1yZWd1bGFyLmVvdCcpOyAvKiBJRTkgQ29tcGF0IE1vZGVzICovXG4gIHNyYzogbG9jYWwoJycpLFxuICB1cmwoJy4uLy4uL2ZvbnRzL2ViLWdhcmFtb25kLXYxNC1sYXRpbi1yZWd1bGFyLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksIC8qIElFNi1JRTggKi9cbiAgdXJsKCcuLi8uLi9mb250cy9lYi1nYXJhbW9uZC12MTQtbGF0aW4tcmVndWxhci53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwgLyogU3VwZXIgTW9kZXJuIEJyb3dzZXJzICovXG4gIHVybCgnLi4vLi4vZm9udHMvZWItZ2FyYW1vbmQtdjE0LWxhdGluLXJlZ3VsYXIud29mZicpIGZvcm1hdCgnd29mZicpLCAvKiBNb2Rlcm4gQnJvd3NlcnMgKi9cbiAgdXJsKCcuLi8uLi9mb250cy9lYi1nYXJhbW9uZC12MTQtbGF0aW4tcmVndWxhci50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksIC8qIFNhZmFyaSwgQW5kcm9pZCwgaU9TICovXG4gIHVybCgnLi4vLi4vZm9udHMvZWItZ2FyYW1vbmQtdjE0LWxhdGluLXJlZ3VsYXIuc3ZnI0VCR2FyYW1vbmQnKSBmb3JtYXQoJ3N2ZycpOyAvKiBMZWdhY3kgaU9TICovXG4gIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XG59XG5cbi8qIGViLWdhcmFtb25kLTYwMCAtIGxhdGluICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdFQiBHYXJhbW9uZCc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgc3JjOiB1cmwoJy4uLy4uL2ZvbnRzL2ViLWdhcmFtb25kLXYxNC1sYXRpbi02MDAuZW90Jyk7IC8qIElFOSBDb21wYXQgTW9kZXMgKi9cbiAgc3JjOiBsb2NhbCgnJyksXG4gIHVybCgnLi4vLi4vZm9udHMvZWItZ2FyYW1vbmQtdjE0LWxhdGluLTYwMC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovXG4gIHVybCgnLi4vLi4vZm9udHMvZWItZ2FyYW1vbmQtdjE0LWxhdGluLTYwMC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwgLyogU3VwZXIgTW9kZXJuIEJyb3dzZXJzICovXG4gIHVybCgnLi4vLi4vZm9udHMvZWItZ2FyYW1vbmQtdjE0LWxhdGluLTYwMC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksIC8qIE1vZGVybiBCcm93c2VycyAqL1xuICB1cmwoJy4uLy4uL2ZvbnRzL2ViLWdhcmFtb25kLXYxNC1sYXRpbi02MDAudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLCAvKiBTYWZhcmksIEFuZHJvaWQsIGlPUyAqL1xuICB1cmwoJy4uLy4uL2ZvbnRzL2ViLWdhcmFtb25kLXYxNC1sYXRpbi02MDAuc3ZnI0VCR2FyYW1vbmQnKSBmb3JtYXQoJ3N2ZycpOyAvKiBMZWdhY3kgaU9TICovXG4gIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XG59XG5cbi8qIHJvemhhLW9uZS1yZWd1bGFyIC0gbGF0aW4gKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JvemhhIE9uZSc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgc3JjOiB1cmwoJy4uLy4uL2ZvbnRzL3JvemhhLW9uZS12OC1sYXRpbi1yZWd1bGFyLmVvdCcpOyAvKiBJRTkgQ29tcGF0IE1vZGVzICovXG4gIHNyYzogbG9jYWwoJycpLFxuICB1cmwoJy4uLy4uL2ZvbnRzL3JvemhhLW9uZS12OC1sYXRpbi1yZWd1bGFyLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksIC8qIElFNi1JRTggKi9cbiAgdXJsKCcuLi8uLi9mb250cy9yb3poYS1vbmUtdjgtbGF0aW4tcmVndWxhci53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwgLyogU3VwZXIgTW9kZXJuIEJyb3dzZXJzICovXG4gIHVybCgnLi4vLi4vZm9udHMvcm96aGEtb25lLXY4LWxhdGluLXJlZ3VsYXIud29mZicpIGZvcm1hdCgnd29mZicpLCAvKiBNb2Rlcm4gQnJvd3NlcnMgKi9cbiAgdXJsKCcuLi8uLi9mb250cy9yb3poYS1vbmUtdjgtbGF0aW4tcmVndWxhci50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksIC8qIFNhZmFyaSwgQW5kcm9pZCwgaU9TICovXG4gIHVybCgnLi4vLi4vZm9udHMvcm96aGEtb25lLXY4LWxhdGluLXJlZ3VsYXIuc3ZnI1JvemhhT25lJykgZm9ybWF0KCdzdmcnKTsgLyogTGVnYWN5IGlPUyAqL1xuICBmb250LWRpc3BsYXk6IGZhbGxiYWNrO1xufVxuXG4vKiBpYm0tcGxleC1zYW5zLXJlZ3VsYXIgLSBsYXRpbiAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnSUJNIFBsZXggU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgc3JjOiB1cmwoJy4uLy4uL2ZvbnRzL2libS1wbGV4LXNhbnMtdjgtbGF0aW4tcmVndWxhci5lb3QnKTsgLyogSUU5IENvbXBhdCBNb2RlcyAqL1xuICBzcmM6IGxvY2FsKCcnKSxcbiAgdXJsKCcuLi8uLi9mb250cy9pYm0tcGxleC1zYW5zLXY4LWxhdGluLXJlZ3VsYXIuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSwgLyogSUU2LUlFOCAqL1xuICB1cmwoJy4uLy4uL2ZvbnRzL2libS1wbGV4LXNhbnMtdjgtbGF0aW4tcmVndWxhci53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwgLyogU3VwZXIgTW9kZXJuIEJyb3dzZXJzICovXG4gIHVybCgnLi4vLi4vZm9udHMvaWJtLXBsZXgtc2Fucy12OC1sYXRpbi1yZWd1bGFyLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSwgLyogTW9kZXJuIEJyb3dzZXJzICovXG4gIHVybCgnLi4vLi4vZm9udHMvaWJtLXBsZXgtc2Fucy12OC1sYXRpbi1yZWd1bGFyLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSwgLyogU2FmYXJpLCBBbmRyb2lkLCBpT1MgKi9cbiAgdXJsKCcuLi8uLi9mb250cy9pYm0tcGxleC1zYW5zLXY4LWxhdGluLXJlZ3VsYXIuc3ZnI0lCTVBsZXhTYW5zJykgZm9ybWF0KCdzdmcnKTsgLyogTGVnYWN5IGlPUyAqL1xuICBmb250LWRpc3BsYXk6IGZhbGxiYWNrO1xufVxuXG4vKiBpYm0tcGxleC1zYW5zLTUwMCAtIGxhdGluICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdJQk0gUGxleCBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNTAwO1xuICBzcmM6IHVybCgnLi4vLi4vZm9udHMvaWJtLXBsZXgtc2Fucy12OC1sYXRpbi01MDAuZW90Jyk7IC8qIElFOSBDb21wYXQgTW9kZXMgKi9cbiAgc3JjOiBsb2NhbCgnJyksXG4gIHVybCgnLi4vLi4vZm9udHMvaWJtLXBsZXgtc2Fucy12OC1sYXRpbi01MDAuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSwgLyogSUU2LUlFOCAqL1xuICB1cmwoJy4uLy4uL2ZvbnRzL2libS1wbGV4LXNhbnMtdjgtbGF0aW4tNTAwLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLCAvKiBTdXBlciBNb2Rlcm4gQnJvd3NlcnMgKi9cbiAgdXJsKCcuLi8uLi9mb250cy9pYm0tcGxleC1zYW5zLXY4LWxhdGluLTUwMC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksIC8qIE1vZGVybiBCcm93c2VycyAqL1xuICB1cmwoJy4uLy4uL2ZvbnRzL2libS1wbGV4LXNhbnMtdjgtbGF0aW4tNTAwLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSwgLyogU2FmYXJpLCBBbmRyb2lkLCBpT1MgKi9cbiAgdXJsKCcuLi8uLi9mb250cy9pYm0tcGxleC1zYW5zLXY4LWxhdGluLTUwMC5zdmcjSUJNUGxleFNhbnMnKSBmb3JtYXQoJ3N2ZycpOyAvKiBMZWdhY3kgaU9TICovXG4gIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJyZW1peGljb25cIjtcbiAgc3JjOiB1cmwoJy4uLy4uL2ZvbnRzL3JlbWl4aWNvbi5lb3QnKTsgLyogSUU5Ki9cbiAgc3JjOiB1cmwoJy4uLy4uL2ZvbnRzL3JlbWl4aWNvbi5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovXG4gIHVybChcIi4uLy4uL2ZvbnRzL3JlbWl4aWNvbi53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSxcbiAgdXJsKFwiLi4vLi4vZm9udHMvcmVtaXhpY29uLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSxcbiAgdXJsKCcuLi8uLi9mb250cy9yZW1peGljb24udHRmJykgZm9ybWF0KCd0cnVldHlwZScpLCAvKiBjaHJvbWUsIGZpcmVmb3gsIG9wZXJhLCBTYWZhcmksIEFuZHJvaWQsIGlPUyA0LjIrKi9cbiAgdXJsKCcuLi8uLi9mb250cy9yZW1peGljb24uc3ZnPyNyZW1peGljb24nKSBmb3JtYXQoJ3N2ZycpOyAvKiBpT1MgNC4xLSAqL1xuICBmb250LWRpc3BsYXk6IGZhbGxiYWNrO1xufVxuXG4vKiBmYWxsYmFjayAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnTWF0ZXJpYWwgSWNvbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHNyYzogdXJsKCcuLi8uLi9mb250cy9NYXRlcmlhbEljb25zLVJlZ3VsYXIud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXG4gIHVybChcIi4uL2ZvbnRzL01hdGVyaWFsSWNvbnMtUmVndWxhci50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XG59XG5cbi8qIGZhbGxiYWNrICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdNYXRlcmlhbCBJY29ucyBPdXRsaW5lZCc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgc3JjOiB1cmwoJy4uLy4uL2ZvbnRzL01hdGVyaWFsSWNvbnNPdXRsaW5lZC1SZWd1bGFyLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxuICB1cmwoXCIuLi9mb250cy9NYXRlcmlhbEljb25zT3V0bGluZWQtUmVndWxhci5vdGZcIikgZm9ybWF0KFwib3BlbnR5cGVcIik7XG4gIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XG59XG5cbiIsIkB1c2UgJy4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVtJyBhcyByZW07XG5AaW1wb3J0IFwiLi4vZ2xvYmFsLWluY2x1ZGVzXCI7XG5AaW1wb3J0IFwiZm9udC1mYWNlXCI7XG5cbi8qXG5XQ0FHIHJlcXVpcmVzIHRoYXQgbm8gbG9zcyBvZiBjb250ZW50IG9yIGZ1bmN0aW9uYWxpdHkgb2NjdXJzIHdoZW4gdGhlXG5lbmQgdXNlciBvdmVycmlkZXMgcGFnZSBzdHlsZXMgZm9yIHBhcmFncmFwaCBzcGFjaW5nIHRvIDIwMCVcbm9mIHRoZSBmb250IHNpemUsIHRleHQgbGluZSBoZWlnaHQvc3BhY2luZyB0byAxNTAlIG9mIHRoZSBmb250IHNpemUsXG53b3JkIHNwYWNpbmcgdG8gMTYlIG9mIHRoZSBmb250IHNpemUsIGFuZCBsZXR0ZXIgc3BhY2luZyB0byAxMiVcbm9mIHRoZSBmb250IHNpemUuIEVuc3VyZSB0aGF0IHlvdXIgcGFnZSB0ZXh0IGNhbiBiZSBtb2RpZmllZFxud2l0aG91dCBpdCBkaXNhcHBlYXJpbmcgb3Igb3ZlcmxhcHBpbmcgb3RoZXIgcGFnZSBjb250ZW50LlxuICovXG5cbmJvZHkge1xuICBmb250LWZhbWlseTogJGZvbnQtc2FucztcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250LXdlaWdodDogNDAwO1xuICBjb2xvcjogJGNoYXJjb2FsO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgQGluY2x1ZGUgcmVtKGxldHRlci1zcGFjaW5nLCAxcHgpO1xufVxuXG4uaDEsXG5oMSB7XG4gIGZvbnQtZmFtaWx5OiAkZm9udC1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgQGluY2x1ZGUgcmVtKGZvbnQtc2l6ZSwgNTRweCk7XG4gIGxpbmUtaGVpZ2h0OiA1OHB4O1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICBtYXJnaW4tdG9wOiAwO1xuXG4gIEBpbmNsdWRlIG1xKCRmcm9tOiBzbWFsbF9kZXNrdG9wKSB7XG4gICAgQGluY2x1ZGUgcmVtKGZvbnQtc2l6ZSwgNzBweCk7XG4gICAgQGluY2x1ZGUgcmVtKGxpbmUtaGVpZ2h0LCA3OHB4KTtcbiAgICBAaW5jbHVkZSByZW0obWFyZ2luLWJvdHRvbSwgMjhweCk7XG4gIH1cbn1cblxuLmgyLFxuaDIge1xuICBmb250LWZhbWlseTogJGZvbnQtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIEBpbmNsdWRlIHJlbShmb250LXNpemUsIDQ0cHgpO1xuICBAaW5jbHVkZSByZW0obGluZS1oZWlnaHQsIDQ4cHgpO1xuICBAaW5jbHVkZSByZW0obWFyZ2luLWJvdHRvbSwgMjVweCk7XG4gIG1hcmdpbi10b3A6IDA7XG5cbiAgQGluY2x1ZGUgbXEoJGZyb206IHNtYWxsX2Rlc2t0b3ApIHtcbiAgICBAaW5jbHVkZSByZW0oZm9udC1zaXplLCA1NnB4KTtcbiAgICBAaW5jbHVkZSByZW0obGluZS1oZWlnaHQsIDU4cHgpO1xuICAgIEBpbmNsdWRlIHJlbShtYXJnaW4tYm90dG9tLCAyOHB4KTtcbiAgfVxufVxuXG4uaDMsXG5oMyB7XG5cbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgQGluY2x1ZGUgcmVtKGZvbnQtc2l6ZSwgMjBweCk7XG4gIEBpbmNsdWRlIHJlbShsaW5lLWhlaWdodCwgMjVweCk7XG4gIEBpbmNsdWRlIHJlbShtYXJnaW4tYm90dG9tLCAyMHB4KTtcbiAgbWFyZ2luLXRvcDogMDtcblxuICBAaW5jbHVkZSBtcSgkZnJvbTogc21hbGxfZGVza3RvcCkge1xuICAgIEBpbmNsdWRlIHJlbShmb250LXNpemUsIDI2cHgpO1xuICAgIEBpbmNsdWRlIHJlbShsaW5lLWhlaWdodCwgMzBweCk7XG4gICAgQGluY2x1ZGUgcmVtKG1hcmdpbi1ib3R0b20sIDIycHgpO1xuICB9XG59XG5cbi5oNCxcbmg0IHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgQGluY2x1ZGUgcmVtKGZvbnQtc2l6ZSwgMThweCk7XG4gIEBpbmNsdWRlIHJlbShsaW5lLWhlaWdodCwgMjVweCk7XG4gIG1hcmdpbi10b3A6IDA7XG4gIEBpbmNsdWRlIHJlbShtYXJnaW4tYm90dG9tLCAxMnB4KTtcblxuICBAaW5jbHVkZSBtcSgkZnJvbTogc21hbGxfZGVza3RvcCkge1xuICAgIEBpbmNsdWRlIHJlbShmb250LXNpemUsIDIycHgpO1xuICAgIEBpbmNsdWRlIHJlbShsaW5lLWhlaWdodCwgMzBweCk7XG4gICAgQGluY2x1ZGUgcmVtKG1hcmdpbi1ib3R0b20sIDE4cHgpO1xuICB9XG59XG5cbi5oNSxcbmg1IHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgQGluY2x1ZGUgcmVtKGZvbnQtc2l6ZSwgMTJweCk7XG4gIEBpbmNsdWRlIHJlbShsaW5lLWhlaWdodCwgMjVweCk7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7XG5cbiAgQGluY2x1ZGUgbXEoJGZyb206IHNtYWxsX2Rlc2t0b3ApIHtcbiAgICBAaW5jbHVkZSByZW0oZm9udC1zaXplLCAxNHB4KTtcbiAgICBAaW5jbHVkZSByZW0obGluZS1oZWlnaHQsIDMwcHgpO1xuICB9XG59XG5cbi5oNixcbmg2IHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgQGluY2x1ZGUgcmVtKGZvbnQtc2l6ZSwgMTZweCk7XG4gIEBpbmNsdWRlIHJlbShsaW5lLWhlaWdodCwgMjVweCk7XG4gIEBpbmNsdWRlIHJlbShtYXJnaW4tYm90dG9tLCAxMnB4KTtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcblxuICBAaW5jbHVkZSBtcSgkZnJvbTogc21hbGxfZGVza3RvcCkge1xuICAgIEBpbmNsdWRlIHJlbShmb250LXNpemUsIDE4cHgpO1xuICAgIEBpbmNsdWRlIHJlbShsaW5lLWhlaWdodCwgMzBweCk7XG4gIH1cbn1cblxuLmwtY29udGVudCB7XG4gIGxpLFxuICAucCxcbiAgcCB7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LXNhbnM7XG4gICAgQGluY2x1ZGUgcmVtKGZvbnQtc2l6ZSwgMTZweCk7XG4gICAgQGluY2x1ZGUgcmVtKGxpbmUtaGVpZ2h0LCAyNnB4KTtcbiAgICBAaW5jbHVkZSByZW0obWFyZ2luLWJvdHRvbSwgMzJweCk7XG4gICAgQGluY2x1ZGUgcmVtKGxldHRlci1zcGFjaW5nLCAxcHgpO1xuICAgIG1hcmdpbi10b3A6IDA7XG5cbiAgICBAaW5jbHVkZSBtcSgkZnJvbTogc21hbGxfZGVza3RvcCkge1xuICAgICAgQGluY2x1ZGUgcmVtKGZvbnQtc2l6ZSwgMTlweCk7XG4gICAgICBAaW5jbHVkZSByZW0obGluZS1oZWlnaHQsIDMycHgpO1xuICAgICAgQGluY2x1ZGUgcmVtKG1hcmdpbi1ib3R0b20sIDM4cHgpO1xuICAgIH1cbiAgfVxufVxuXG4ubWF0ZXJpYWwtaWNvbnMge1xuICBmb250LWZhbWlseTogJ01hdGVyaWFsIEljb25zJztcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBAaW5jbHVkZSByZW0oZm9udC1zaXplLCAyNHB4KTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGxldHRlci1zcGFjaW5nOiBub3JtYWw7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHdvcmQtd3JhcDogbm9ybWFsO1xuICBkaXJlY3Rpb246IGx0cjtcbiAgLXdlYmtpdC1mb250LWZlYXR1cmUtc2V0dGluZ3M6ICdsaWdhJztcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5cbi5tYXRlcmlhbC1pY29ucy1vdXRsaW5lZCB7XG4gIGZvbnQtZmFtaWx5OiAnTWF0ZXJpYWwgSWNvbnMgT3V0bGluZWQnO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIEBpbmNsdWRlIHJlbShmb250LXNpemUsIDI0cHgpO1xuICBsaW5lLWhlaWdodDogMTtcbiAgbGV0dGVyLXNwYWNpbmc6IG5vcm1hbDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgd29yZC13cmFwOiBub3JtYWw7XG4gIGRpcmVjdGlvbjogbHRyO1xuICAtd2Via2l0LWZvbnQtZmVhdHVyZS1zZXR0aW5nczogJ2xpZ2EnO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbn1cbiIsIiRicm93c2VyLWNvbnRleHQ6IDE2OyAvLyBzaG91bGQgYmUgY29uc2lzdGVudCB3aXRoIHlvdXIgaHRtbC9ib2R5IGZvbnQtc2l6ZVxuXG4vLyBSZW0gbWl4aW4gdG8gY29udmVydCBhIHB4IHZhbHVlIHRvIHJlbXMuXG4vLyBodHRwOi8vaHVnb2dpcmF1ZGVsLmNvbS8yMDEzLzAzLzE4L3VsdGltYXRlLXJlbS1taXhpbi9cbkBmdW5jdGlvbiBwYXJzZUludCgkbikge1xuICBAcmV0dXJuICRuIC8gKCRuICogMCArIDEpO1xufVxuXG4vLyBDb252ZXJ0cyBweCBpbnRvIHJlbXNcbkBtaXhpbiByZW0oJHByb3BlcnR5LCAkdmFsdWVzKSB7XG4gICRiYXNlLWZvbnQtc2l6ZTogJGJyb3dzZXItY29udGV4dDsgLy8gc2hvdWxkIGJlIGNvbnNpc3RlbnQgd2l0aCB5b3VyIGh0bWwvYm9keSBmb250LXNpemVcbiAgJHB4OiAoKTtcbiAgJHJlbTogKCk7XG5cbiAgQGVhY2ggJHZhbHVlIGluICR2YWx1ZXMge1xuICAgIEBpZiAkdmFsdWU9PTAgb3IgJHZhbHVlPT1hdXRvIHtcbiAgICAgICRweDogYXBwZW5kKCRweCwgJHZhbHVlKTtcbiAgICAgICRyZW06IGFwcGVuZCgkcmVtLCAkdmFsdWUpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJHVuaXQ6IHVuaXQoJHZhbHVlKTtcbiAgICAgICR2YWw6IHBhcnNlSW50KCR2YWx1ZSk7XG5cbiAgICAgIEBpZiAkdW5pdD09XCJweFwiIHtcbiAgICAgICAgJHB4OiBhcHBlbmQoJHB4LCAkdmFsdWUpO1xuICAgICAgICAkcmVtOiBhcHBlbmQoJHJlbSwgKCR2YWwgLyAkYmFzZS1mb250LXNpemUgKyByZW0pKTtcbiAgICAgIH1cblxuICAgICAgQGlmICR1bml0PT1cInJlbVwiIHtcbiAgICAgICAgJHB4OiBhcHBlbmQoJHB4LCAoJHZhbCAqICRiYXNlLWZvbnQtc2l6ZSArIHB4KSk7XG4gICAgICAgICRyZW06IGFwcGVuZCgkcmVtLCAkdmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAjeyRwcm9wZXJ0eX06ICRyZW07XG59XG4iXX0= */
