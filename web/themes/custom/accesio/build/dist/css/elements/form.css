/**
 * form styling.
 */
/*
A11Y Color grids.
https://contrast-grid.eightshapes.com/?background-colors=&foreground-colors=%2369CEC3%2C%20Green%0D%0A%23212121%2C%20Black%0D%0A%23890C0C%2C%20Dark%20Red%0D%0A%23FFC300%2C%20Goldenrod%0D%0A%23404040%2C%20Charcoal%0D%0A%23FFF%2C%20White%0D%0A%23482e6e%2C%20Eggplant%0D%0A%23301f4a%2C%20Dark%20eggplant%0D%0A%2327776e%2C%20green%20dark%0D%0A&es-color-form__tile-size=large

*/
/* stylelint-disable */
/* stylelint-enable */
input[type=text],
input[type=password],
input[type=date],
input[type=datetime],
input[type=datetime-local],
input[type=month],
input[type=week],
input[type=email],
input[type=number],
input[type=search],
input[type=tel],
input[type=time],
input[type=url],
input[type=color],
input[type=text] {
  font-size: 1.125rem;
  width: 100%;
  height: 40px;
  line-height: 1.67;
  padding: 0 0 0 10px;
  border-radius: 0;
  border: 1px solid #404040;
  -webkit-appearance: none !important;
}
@media (min-width: 64em) {
  input[type=text],
input[type=password],
input[type=date],
input[type=datetime],
input[type=datetime-local],
input[type=month],
input[type=week],
input[type=email],
input[type=number],
input[type=search],
input[type=tel],
input[type=time],
input[type=url],
input[type=color],
input[type=text] {
    height: 45px;
  }
}
input[type=text]:focus,
input[type=password]:focus,
input[type=date]:focus,
input[type=datetime]:focus,
input[type=datetime-local]:focus,
input[type=month]:focus,
input[type=week]:focus,
input[type=email]:focus,
input[type=number]:focus,
input[type=search]:focus,
input[type=tel]:focus,
input[type=time]:focus,
input[type=url]:focus,
input[type=color]:focus,
input[type=text]:focus {
  outline: #482e6e solid 2px;
}

button,
input[type=button] {
  border: 0;
}

.form-item {
  margin-bottom: 30px;
}

label {
  font-size: 0.9375rem;
  display: block;
  font-weight: 600;
  padding-bottom: 10px;
}

details {
  margin-bottom: 20px;
}

summary {
  margin-bottom: 20px;
}

form .description {
  margin-top: 4px;
  line-height: 1.5;
}

.js-form-type-select {
  position: relative;
}
.js-form-type-select:before {
  z-index: 30;
  pointer-events: none;
}
.js-form-type-select select {
  font-size: 1.125rem;
  padding: 2px 38px 2px 10px;
  -webkit-appearance: none;
  -ms-appearance: none;
  -moz-appearance: none;
  outline: none;
  appearance: none;
  border-radius: 0;
  position: relative;
  cursor: pointer;
  background-image: none;
  height: 45px;
  border: 1px solid #404040;
  width: 100%;
}
.filter-sort .js-form-type-select select {
  padding: 2px 4px 2px 10px;
}

/* clears the 'X' from Internet Explorer */
input[type=search]::-ms-clear {
  display: none;
  width: 0;
  height: 0;
}

input[type=search]::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.js-form-type-radio {
  margin-bottom: 14px !important;
}
.js-form-type-radio input[type=radio] {
  position: absolute !important;
  clip: rect(1px, 1px, 1px, 1px);
  overflow: hidden;
  height: 1px;
  width: 1px;
  word-wrap: normal;
}
.js-form-type-radio input[type=radio]:checked + label:before {
  border-color: #482e6e;
  animation: ripple 0.5s linear forwards;
}
.js-form-type-radio input[type=radio]:checked + label:after {
  transform: scale(1);
}
.js-form-type-radio label {
  display: inline-block;
  height: 30px;
  position: relative;
  padding: 0 40px;
  margin-bottom: 0;
  cursor: pointer;
  vertical-align: bottom;
  padding-top: 4px;
  font-size: 1.0625rem;
}
.js-form-type-radio label:before, .js-form-type-radio label:after {
  position: absolute;
  content: "";
  border-radius: 50%;
  transition: all 0.3s ease;
  transition-property: transform, border-color;
}
.js-form-type-radio label:before {
  left: 0;
  top: 0;
  width: 30px;
  height: 30px;
  border: 3px solid #482e6e;
  overflow: hidden;
}
.js-form-type-radio label:after {
  top: 7px;
  left: 7.5px;
  width: 15px;
  height: 15px;
  transform: scale(0);
  background-color: #482e6e;
}

.js-form-type-checkbox {
  position: relative;
  margin-left: 0;
  margin-bottom: 14px !important;
}
.js-form-type-checkbox input[type=checkbox] {
  position: absolute !important;
  clip: rect(1px, 1px, 1px, 1px);
  overflow: hidden;
  word-wrap: normal;
  width: 40px;
  height: 24px;
  clip: auto;
  margin-left: 0;
  opacity: 0;
  cursor: pointer;
  z-index: 1;
}
.js-form-type-checkbox input[type=checkbox]:checked ~ .checkbox-toggle .checkbox-toggle__inner {
  background-color: #482e6e;
}
.js-form-type-checkbox input[type=checkbox]:checked ~ .checkbox-toggle .checkbox-toggle__inner:before {
  transform: translateX(16px);
}
.js-form-type-checkbox .checkbox-toggle {
  z-index: 0;
  display: inline-block;
  vertical-align: top;
  width: 40px;
  height: 24px;
  background-color: #27776e;
  border-radius: 12px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
.js-form-type-checkbox .checkbox-toggle__inner {
  position: relative;
  display: block;
  width: 100%;
  height: 100%;
  overflow: hidden;
  -webkit-clip-path: circle(24px at 50% 50%);
  clip-path: circle(24px at 50% 50%);
  border: 4px solid transparent;
  border-radius: 12px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
.js-form-type-checkbox .checkbox-toggle__inner:before {
  position: absolute;
  content: "";
  width: 100%;
  height: 100%;
  background-color: #fff;
  border-radius: 21px;
  -webkit-transform: translateX(-16px);
  transform: translateX(-16px);
  -webkit-transition: -webkit-transform 0.3s;
  transition: -webkit-transform 0.3s;
  transition: transform 0.3s;
  transition: transform 0.3s, -webkit-transform 0.3s;
}
.js-form-type-checkbox label {
  font-size: 1.0625rem;
  position: relative;
  z-index: 1;
  padding-left: 4px;
  padding-bottom: 0;
  display: inline;
}

/* clears the 'X' from Chrome */
input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-results-button,
input[type=search]::-webkit-search-results-decoration {
  display: none;
}

textarea {
  width: 100%;
  min-height: 100px;
  padding: 10px;
}

@media (max-width: 63.99em) {
  input,
select,
textarea {
    font-size: 16px !important;
  }
}

fieldset {
  margin-top: 40px;
}

legend {
  font-weight: 600;
  letter-spacing: 1px;
  margin-bottom: 10px;
  padding: 6px 12px 8px 12px;
  border-radius: 12px;
  color: #fff;
  background-color: #404040;
}

.fieldset-wrapper {
  padding-bottom: 12px;
}

::-webkit-input-placeholder {
  color: #212121;
}

:-ms-input-placeholder {
  color: #212121;
}

::placeholder {
  color: #212121;
}

/*
* Animation for radios and checkboxes.
 */
@keyframes ripple {
  0% {
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0);
  }
  50% {
    box-shadow: 0 0 0 15px rgba(0, 0, 0, 0.1);
  }
  100% {
    box-shadow: 0 0 0 15px rgba(0, 0, 0, 0);
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
